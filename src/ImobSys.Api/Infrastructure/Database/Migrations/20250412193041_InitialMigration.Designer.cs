// <auto-generated />
using System;
using ImobSys.Api.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ImobSys.Api.Infrastructure.Database.Migrations
{
    [DbContext(typeof(ImobSysDbContext))]
    [Migration("20250412193041_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ImobSys.Api.Modules.Admin.Domain.Property", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("type_id");

                    b.HasKey("Id")
                        .HasName("pk_properties");

                    b.HasIndex("TypeId")
                        .HasDatabaseName("ix_properties_type_id");

                    b.HasIndex("Name", "Description")
                        .HasDatabaseName("ix_properties_name_description");

                    b.ToTable("properties", "admin");
                });

            modelBuilder.Entity("ImobSys.Api.Modules.Admin.Domain.PropertyType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_properties_types");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_properties_types_name");

                    b.ToTable("propertiesTypes", "admin");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0366f790-41f6-476a-9780-e648f58b3eaf"),
                            Description = "Casa",
                            Name = "Casa"
                        },
                        new
                        {
                            Id = new Guid("a10f2f8c-3bce-4e8f-b8bb-69ffb62a2b41"),
                            Description = "Casa duplex",
                            Name = "Casa duplex"
                        },
                        new
                        {
                            Id = new Guid("5c39a928-2f9c-4d41-95f8-8ef46e9dc15c"),
                            Description = "Casa em condomínio fechado",
                            Name = "Casa em condomínio"
                        },
                        new
                        {
                            Id = new Guid("4d84993a-4139-4265-a934-8952c20bbf56"),
                            Description = "Apartamento padrão",
                            Name = "Apartamento padrão"
                        },
                        new
                        {
                            Id = new Guid("3cf4eb65-8052-48f9-9c49-2e09b83f053d"),
                            Description = "Apartamento duplex",
                            Name = "Apartamento duplex"
                        },
                        new
                        {
                            Id = new Guid("df1b2717-84cd-496a-ae6f-5eaa601cc879"),
                            Description = "Cobertura",
                            Name = "Cobertura"
                        });
                });

            modelBuilder.Entity("ImobSys.Api.Modules.Admin.Domain.Property", b =>
                {
                    b.HasOne("ImobSys.Api.Modules.Admin.Domain.PropertyType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_properties_properties_types_type_id");

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
